name: Website CI
run-name: ðŸš€ Main CI/CD Flow ðŸš€
on: [push]
env:
  SERVER_HOST: joostvisser.dev
  DOCKER_IMAGE: joostvisser/personal-website
jobs:
  build-and-test:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
      - run: pnpm install --frozen-lockfile
      - run: pnpm test

  integration-tests:
    name: 'Playwright Tests'
    runs-on: ubuntu-22.04
    container:
      image: mcr.microsoft.com/playwright:v1.52.0-jammy
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
      - run: pnpm install --frozen-lockfile
      - name: Run your tests
        run: pnpm run test:integration
        env:
          HOME: /root
      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

  build-and-upload-docker:
    environment: Main
    if: github.ref == 'refs/heads/main' || contains(github.ref, 'refs/tags/')
    needs: [build-and-test, integration-tests]
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Github metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            joostvisser/personal-website
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy-to-server:
    environment: Main
    if: contains(github.ref, 'refs/tags/')
    needs: [build-and-upload-docker]
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - name: Populate SSH keys
        run: |
          install -m 600 -D /dev/null ~/.ssh/id_rsa
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          ssh-keyscan -H $SERVER_HOST > ~/.ssh/known_hosts
      - name: Copy deployment files
        run: rsync -azv --delete deployment/ joost@$SERVER_HOST:~/portfolio-deployment
      - name: Execute deploy script
        run: |
          ssh joost@$SERVER_HOST '
            cd portfolio-deployment &&
            kustomize edit set image busybox=${{ env.DOCKER_IMAGE }}:${{ github.ref_name }} &&
            cd .. &&
            microk8s kubectl apply -k portfolio-deployment
          '
